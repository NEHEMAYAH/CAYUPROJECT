@page "/CategoryPage"
@inject NavigationManager navigationManager
@inject ICategoryService _catService
@inject IJSRuntime iJSRuntime

<!-- Content -->
<div class="container">
    <div class="row justify-content-center">
        <div class="mx-auto d-flex justify-content-center col-12">
            <!-- Products Grid -->
            <section class="section mt-4">
                <div class=" mx-auto card col-12" style="min-width:900px;">
                    <div class="card-body">
                        <h5 class="card-title text-center">Add / Update Categories</h5>
                        <hr />
                        <EditForm Model="category" OnValidSubmit="saveProdData">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="md-form">
                                <div class="text-primary">Customer ID</div>
                                @*<i class="fas fa-envelope prefix grey-text"></i>*@
                                <InputNumber type="text" @bind-Value="category.categoryId" class="form-control" />
                                <ValidationMessage For="@(() => category.categoryId)" />
                                @*<label for="defaultForm-email">Your email</label>*@
                            </div>
                            <div class="md-form">
                                <div class="text-primary">Customer Name</div>
                                @*<i class="fas fa-envelope prefix grey-text"></i>*@
                                <InputText type="text" @bind-Value="category.name" class="form-control" />
                                <ValidationMessage For="@(() => category.name)" />
                                @*<label for="defaultForm-email">Your email</label>*@
                            </div>

                            <div class="md-form">
                                @*<i class="fas fa-envelope prefix grey-text"></i>*@
                                <div class="text-primary">Contact No</div>
                                <InputNumber type="text" @bind-Value="category.type" class="form-control" />
                                <ValidationMessage For="@(() => category.type)" />
                                @*<label for="defaultForm-email">Your email</label>*@
                            </div>
                            
                            <div class="md-form ">
                                <div class="mx-auto col-md-12 text-center">
                                    <button @onclick="(() => SaveCategories(category))" type="button" class="btn btn-outline-primary waves-effect">Add</button>
                                    <button @onclick="(() => UpdateCategory(category))" type="button" class="btn btn-outline-success waves-effect">Update</button>
                                </div>

                                @*<button type="button" class="btn btn-outline-default waves-effect">Create</button>*@
                            </div>
                        </EditForm>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>
<div class="container-fluid">

    <div class="row justify-content-center">

        <!-- Content -->

        <div class="mx-auto d-flex justify-content-center col-12">
            <!-- Products Grid -->
            <section class="section mt-4">
                <div class=" mx-auto card col-12" style="width:900px;">
                    <div class="card-body">
                        <h5 class="card-title text-center"><strong>Customer List</strong></h5>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 ml-auto mr-auto">

                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th class="text-center">Product Id</th>
                                                <th> ID</th>
                                                <th> Name</th>
                                                <th> Contact No</th>
                                                <th>Address</th>
                                                <th class="text-right">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var prod in categoryList)
                                            {
                                            <tr class="text-center">
                                                <td class="text-center">@prod</td>
                                                @*<td>
            <NavLink class="nav-link" href=@string.Format("/Pages/Product//{0}", prod.productId)>
                <span class="oi oi-list-rich" aria-hidden="true"></span> @prod.productId
            </NavLink>
        </td>*@
                                                <td>@prod.name</td>

                                                <td>@prod.type</td>
                                               
                                                
                                                <td class="td-actions text-right">
                                                    <button type="button" rel="tooltip" @onclick="(() => EditCategory(prod))" class="btn btn-success btn-just-icon btn-sm" data-original-title="" title="">
                                                        <i class="fa fas-edit">Edit</i>
                                                    </button>
                                                    <button type="button" rel="tooltip" @onclick="(() =>  DeleteCategory(prod))" class="btn btn-danger btn-just-icon btn-sm" data-original-title="" title="">
                                                        <i class="fa fas-trash">delete</i>
                                                    </button>
                                                </td>
                                            </tr>
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>





@code {

    AddIdentityWasm.Shared.Category category = new AddIdentityWasm.Shared.Category();

    List<AddIdentityWasm.Shared.Category> categoryList = new List<AddIdentityWasm.Shared.Category>();

    protected override async Task OnInitializedAsync()
    {
        var result = await _catService.getAllCategories();
        //var categoryList = await _catService.getAllCategories();
        //if (result != null) prodModel = result;
        categoryList = result;
        //categoriesList = categoryList;
    }

    private async Task EditCategory(AddIdentityWasm.Shared.Category model)
    {

        // await _customerService.updateCustomer(model);
        category = model;
        //ParentProductModel(prodModel);
        //StateHasChanged();
    }
    private async Task DeleteCategory(AddIdentityWasm.Shared.Category model)
    {
        await _catService.deleteOrder(model); //deleteProduct
        var result = await _catService.getAllCategories();
        categoryList = result;
        StateHasChanged();

    }
    public async void SaveCategories(AddIdentityWasm.Shared.Category model)
    {
        await _catService.addCategory(model);
        var result = await _catService.getAllCategories();
        categoryList = result;
        category = new AddIdentityWasm.Shared.Category();
        StateHasChanged();
        //base.OnInitialized();


    }
    public async void UpdateCategory(AddIdentityWasm.Shared.Category model)
    {
        await _catService.updateCategory(model);
        StateHasChanged();

    }

    public void getAllCustomers()
    {

    }

    public async void saveProdData() { } // form submit method
}
