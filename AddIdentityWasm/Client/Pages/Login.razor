@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager


@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}
<div class="container-fluid">

    <div class="row justify-content-center">

        <!-- Content -->
        @*<div class="col-lg-12 col-md-12 mb-4">*@
        <div class="mx-auto d-flex justify-content-center col-12">
            <!-- Products Grid -->
            <section class="section mt-4">
                <div class=" mx-auto card col-12" style="width:600px;">
                    <div class="card-body">
                        <h5 class="card-title text-center">Please enter your Login details</h5>
                        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="md-form">
                                <i class="fas fa-envelope prefix grey-text"></i>
                                <InputText type="email" @bind-Value="loginModel.Email" class="form-control" />
                                <ValidationMessage For="@(() => loginModel.Email)" />
                                <label for="defaultForm-email">Your email</label>
                            </div>
                            <div class="md-form">
                                <i class="fas fa-envelope prefix grey-text"></i>
                                <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                                <ValidationMessage For="@(() => loginModel.Password)" />
                                <label for="defaultForm-email">Your password</label>
                            </div>
                            <div class="text-center mt-4">
                                <button type="submit" class="btn btn-default">Submit</button>
                            </div>

                        </EditForm>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}
